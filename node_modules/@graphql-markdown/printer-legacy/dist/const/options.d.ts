import type { CollapsibleOption, GraphQLDirective, GraphQLSchema, Maybe, PrintTypeOptions, PrinterConfigPrintTypeOptions, SchemaEntitiesGroupMap, SectionLevelValue } from "@graphql-markdown/types";
export declare enum TypeHierarchy {
    API = "api",
    ENTITY = "entity",
    FLAT = "flat"
}
export declare enum SectionLevels {
    NONE = "",
    LEVEL = "#"
}
export declare const PRINT_TYPE_DEFAULT_OPTIONS: Required<PrinterConfigPrintTypeOptions>;
export declare const DEFAULT_OPTIONS: Required<Omit<PrintTypeOptions, "collapsible" | "groups" | "level" | "meta" | "onlyDocDirectives" | "parentType" | "schema" | "skipDocDirectives">> & {
    collapsible: Maybe<CollapsibleOption>;
    groups: Maybe<SchemaEntitiesGroupMap>;
    level: Maybe<SectionLevelValue>;
    onlyDocDirectives: GraphQLDirective[];
    parentType: Maybe<string>;
    schema: Maybe<GraphQLSchema>;
    skipDocDirectives: GraphQLDirective[];
};
