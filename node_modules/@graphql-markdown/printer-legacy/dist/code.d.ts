/**
 * Provides utility functions for generating code representations of GraphQL types
 * in Markdown format. This module handles the formatting of arguments and fields
 * with proper indentation and deprecation notices.
 * @module
 *
 */
import type { MDXString, PrintTypeOptions } from "@graphql-markdown/types";
/**
 * Generates a string representation of GraphQL arguments with proper formatting and indentation.
 *
 * @param type - The GraphQL type object containing arguments to print
 * @param indentationLevel - The level of indentation to apply (default: 1)
 * @returns A formatted string of arguments or an empty string if no arguments exist
 * @example
 * ```
 * printCodeArguments({ args: [{ name: 'id', type: 'ID!' }] })
 * // Returns:
 * // (
 * //   id: ID!
 * // )
 * ```
 */
export declare const printCodeArguments: (type: unknown, indentationLevel?: number) => string;
/**
 * Generates a string representation of a GraphQL field including its arguments,
 * return type, and deprecation status.
 *
 * @param type - The GraphQL field type object to print
 * @param options - Optional configuration for printing the type
 * @param indentationLevel - The level of indentation to apply (default: 0)
 * @returns A formatted string representing the field or an empty string if the field should not be printed
 * @example
 * ```
 * printCodeField({ name: 'user', type: 'User!', args: [{ name: 'id', type: 'ID!' }] })
 * // Returns: user(
 * //   id: ID!
 * // ): User!
 * ```
 */
export declare const printCodeField: (type: unknown, options?: PrintTypeOptions, indentationLevel?: number) => MDXString | string;
