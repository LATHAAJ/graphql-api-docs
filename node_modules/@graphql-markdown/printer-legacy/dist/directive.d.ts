/**
 * Provides utilities for handling and printing GraphQL directives in Markdown format
 * @module
 */
import type { Badge, PrintTypeOptions, MDXString, CustomDirectiveMapItem, CustomDirectiveResolver, Maybe } from "@graphql-markdown/types";
/**
 * Resolves a custom directive using the provided resolver function
 * @param resolver - The resolver function name to execute
 * @param type - The GraphQL type to resolve the directive for
 * @param constDirectiveOption - The directive configuration options
 * @param fallback - Optional fallback value if resolution fails
 * @returns The resolved directive value or fallback/undefined
 */
export declare const getCustomDirectiveResolver: (resolver: CustomDirectiveResolver, type: unknown, constDirectiveOption: CustomDirectiveMapItem, fallback?: Maybe<string>) => Maybe<string>;
/**
 * Prints a custom directive as a Markdown string
 * @param type - The GraphQL type to print the directive for
 * @param constDirectiveOption - The directive configuration options
 * @param options - General printing options
 * @returns Formatted Markdown string for the directive or undefined
 */
export declare const printCustomDirective: (type: unknown, constDirectiveOption: CustomDirectiveMapItem, options: PrintTypeOptions) => Maybe<string>;
/**
 * Prints all custom directives for a type as a Markdown section
 * @param type - The GraphQL type to print directives for
 * @param options - General printing options
 * @returns Markdown string containing all formatted directives
 */
export declare const printCustomDirectives: (type: unknown, options: PrintTypeOptions) => string;
/**
 * Extracts custom tags from directives for a given type
 * @param type - The GraphQL type to get tags for
 * @param options - General printing options
 * @returns Array of badge configurations from directive tags
 */
export declare const getCustomTags: (type: unknown, options: PrintTypeOptions) => Badge[];
/**
 * Prints custom directive tags as Markdown badges
 * @param type - The GraphQL type to print tags for
 * @param options - General printing options
 * @returns Formatted Markdown string of badges or empty string
 */
export declare const printCustomTags: (type: unknown, options: PrintTypeOptions) => MDXString | string;
