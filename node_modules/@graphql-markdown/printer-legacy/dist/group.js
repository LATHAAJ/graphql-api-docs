"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroup = void 0;
const graphql_1 = require("@graphql-markdown/graphql");
const utils_1 = require("@graphql-markdown/utils");
/**
 * Retrieves the group name for a given GraphQL type based on its category and group mapping.
 *
 * @param type - The GraphQL type to get the group for
 * @param groups - Mapping of schema entities to their group names
 * @param typeCategory - The category of the schema entity
 * @returns The slugified group name or empty string if no group is found
 */
const getGroup = (type, groups, typeCategory) => {
    if (typeof type !== "object" ||
        type === null ||
        typeof groups !== "object" ||
        groups === null ||
        !typeCategory) {
        return "";
    }
    const graphQLNamedType = (0, graphql_1.getNamedType)(type);
    if (!graphQLNamedType) {
        return "";
    }
    const typeName = "name" in graphQLNamedType
        ? graphQLNamedType.name
        : String(graphQLNamedType);
    if (!(typeCategory in groups && typeName in groups[typeCategory])) {
        return "";
    }
    return (0, utils_1.slugify)(groups[typeCategory][typeName]);
};
exports.getGroup = getGroup;
